{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\TaskInput.js\",\n  _s = $RefreshSig$();\n// TaskInput.js\n// This file defines the TaskInput component responsible for allowing users to input new tasks.\n\n// Importing necessary modules from React and Redux\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTask } from \"./tasksSlice\"; // Importing the action creator for adding a new task\n\n// Functional component for the TaskInput\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskInput() {\n  _s();\n  // State variable to store the value of the input field\n  const [task, setTask] = useState(\"\");\n\n  // Redux dispatcher for dispatching actions\n  const dispatch = useDispatch();\n\n  // Function to handle adding a new task\n  const handleAddTask = () => {\n    // Checking if the input field is not empty or only contains whitespace\n    if (task.trim()) {\n      // Dispatching the addTask action with the task text as payload\n      dispatch(addTask(task));\n      // Clearing the input field after adding the task\n      setTask(\"\");\n    }\n  };\n\n  // Function to handle key press events (Enter key) for adding a task\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleAddTask(); // Calling handleAddTask function when Enter key is pressed\n    }\n  };\n\n  // Rendering the task input field and add task button\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new task\",\n      value: task,\n      onChange: e => setTask(e.target.value),\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskInput, \"i1LQVA+6mBto8M8yTwIVzYVUP44=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskInput;\nexport default TaskInput; // Exporting the TaskInput component for use in other parts of the application\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","useState","useDispatch","addTask","jsxDEV","_jsxDEV","TaskInput","_s","task","setTask","dispatch","handleAddTask","trim","handleKeyPress","e","key","className","children","type","placeholder","value","onChange","target","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/TaskInput.js"],"sourcesContent":["// TaskInput.js\r\n// This file defines the TaskInput component responsible for allowing users to input new tasks.\r\n\r\n// Importing necessary modules from React and Redux\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"./tasksSlice\"; // Importing the action creator for adding a new task\r\n\r\n// Functional component for the TaskInput\r\nfunction TaskInput() {\r\n  // State variable to store the value of the input field\r\n  const [task, setTask] = useState(\"\");\r\n\r\n  // Redux dispatcher for dispatching actions\r\n  const dispatch = useDispatch();\r\n\r\n  // Function to handle adding a new task\r\n  const handleAddTask = () => {\r\n    // Checking if the input field is not empty or only contains whitespace\r\n    if (task.trim()) {\r\n      // Dispatching the addTask action with the task text as payload\r\n      dispatch(addTask(task));\r\n      // Clearing the input field after adding the task\r\n      setTask(\"\");\r\n    }\r\n  };\r\n\r\n  // Function to handle key press events (Enter key) for adding a task\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleAddTask(); // Calling handleAddTask function when Enter key is pressed\r\n    }\r\n  };\r\n\r\n  // Rendering the task input field and add task button\r\n  return (\r\n    <div className=\"task-input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a new task\"\r\n        value={task}\r\n        onChange={(e) => setTask(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <button onClick={handleAddTask}>Add Task</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskInput; // Exporting the TaskInput component for use in other parts of the application\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,cAAc,CAAC,CAAC;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,IAAIH,IAAI,CAACI,IAAI,CAAC,CAAC,EAAE;MACf;MACAF,QAAQ,CAACP,OAAO,CAACK,IAAI,CAAC,CAAC;MACvB;MACAC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;;EAED;EACA,MAAMI,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBJ,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;;EAED;EACA,oBACEN,OAAA;IAAKW,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBZ,OAAA;MACEa,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEZ,IAAK;MACZa,QAAQ,EAAGP,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MACzCG,UAAU,EAAEV;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFtB,OAAA;MAAQuB,OAAO,EAAEjB,aAAc;MAAAM,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACpB,EAAA,CAtCQD,SAAS;EAAA,QAKCJ,WAAW;AAAA;AAAA2B,EAAA,GALrBvB,SAAS;AAwClB,eAAeA,SAAS,CAAC,CAAC;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}